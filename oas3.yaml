openapi: 3.0.0
info:
  version: '1.0'
  title: "Just Sport OpenAPI 3.0"
  description: API per gestire annunci sportivi
  license:
    name: MIT
servers:
  - url: http://localhost:3000/api/v2
    description: Localhost
paths:
  /annunci:
    get:
      summary: GET annunci
      description: Fornisce la lista di annunci in base ai filtri
      parameters:
      - name: attrezzatura_necessaria
        in: path
        required: true
      - name: costo
        in: path
        required: true
      - name: sport
        in: path
        required: true
      - name: citta
        in: path
        required: true
      responses:
        '201':
          description: Lista annunci
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annuncio'

    post:
      summary: POST annunci
      description: Aggiungere un annuncio alla lista
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annuncio'
      responses:
        '202':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_annuncio:
                    type: string
                    example: '629ccb21592531d39ad2b9cd'
                    description: "id dell'annuncio creato"

  /annunci/{annuncioId}:
    get:
      summary: GET annunci/:annuncioId
      description: Mostrare l'annuncio indicato
      parameters:
      - name: annuncioId
        in: path
        required: true
        description: Parametro indicante l'id dell'annuncio
      responses:
        '210':
          description: Annuncio creato
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annuncio'
    
    post:
      summary: POST annunci/:annuncioId
      description: Iscriversi ad annuncio
      parameters:
      - name: annuncioId
        in: path
        required: true
        description: Parametro indicante l'id dell'annuncio
      responses:
        '211':
          description: Aggiunto ai partecipanti
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'success'

    delete:
      summary: DELETE annunci/:annuncioId
      description: Disiscriversi da annuncio
      parameters:
      - name: annuncioId
        in: path
        required: true
        description: Parametro indicante l'id dell'annuncio
      responses:
        '221':
          description: Tolto dai partecipanti
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "success"
        '400':
          description: Utente non Ã¨ iscritto all'annuncio da cui vuole disiscriversi
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "non sei iscritto a questo annuncio"
        '500':
          description: Errore della database
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Connection to server lost"
 
     

  /utenti:
    post:
      summary: POST utenti
      description: Aggiungere un utente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utente'
      responses:
        '231':
          description: Utente aggiunto
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utente'
  
  /autenticazione:
    post:
      summary: POST autenticazione
      description: Assegna un token all'utente
      parameters:
      - name: username
        in: path
        required: true
      - name: password
        in: path
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: 'stipe'
                password:
                  type: string
                  example: 'miocic'
      responses:
        '240':
          description: Token assegnato
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'


components:
  schemas:
    Utente:
      type: object
      properties:
        username:
          type: string
          example: 'stipe'
        password:
          type: string
          example: 'miocic'
        annunci_pubblicati:
          type: array
        iscrizione_annunci:
          type: array
      required:
        - username
        - password
    
    Annuncio:
      type: object
      properties:
        autore:
          type: string
          description: 'id utente autore'
          example:
            '629f97e3cb7c9b83eb290d7e'
        sport:
          type: string
          example: 'Hockey'
        partecipanti:
          type: array
          description: inizializzato ad array vuoto, contiene tutti i partecipanti all'evento
        min_partecipanti:
          type: number
          example: 2
        max_partecipanti:
          type: number
          example: 5
        costo:
          type: number
          example: 0
        data: 
          type: date
          description: fornita automaticamene da date.now
        citta:
          type: string
          example: Trento
    
    Token:
      type: string
      properties:
        token:
          type: string